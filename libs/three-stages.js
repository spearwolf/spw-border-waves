/*!
@file @spearwolf/three-stages - 2d stages and projections for three.js
@author Wolfger Schramm <wolfger@spearwolf.de>
@version 0.0.1+es2017.20211021

Copyright 2021 Wolfger Schramm

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

*/
import{Vector2 as t,Plane as e,Vector3 as i,Quaternion as h,Matrix4 as n,OrthographicCamera as s,PerspectiveCamera as o,Scene as a}from"three";function r(e,i,h=new t){if("pixelZoom"in i)h.copy(e).divideScalar(i.pixelZoom);else if("fill"===i.fit)h.copy(e);else if("contain"===i.fit){if("width"in i&&!("height"in i))h.width=i.width,h.height=e.height*(i.width/e.width);else if(!("width"in i)&&"height"in i)h.width=e.width*(i.height/e.height),h.height=i.height;else{const t=e.width/e.height,n=i.width/i.height;t>n?(h.width=e.width*(i.height/e.height),h.height=i.height):t<n?(h.width=i.width,h.height=e.height*(i.width/e.width)):h.set(i.width,i.height)}"minPixelZoom"in i&&e.width/h.width<i.minPixelZoom?h.copy(e).divideScalar(i.minPixelZoom):"maxPixelZoom"in i&&e.width/h.width>i.maxPixelZoom&&h.copy(e).divideScalar(i.maxPixelZoom)}return h}
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */function c(t,e,i,h){if("a"===i&&!h)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof e?t!==e||!h:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===i?h:"a"===i?h.call(t):h?h.value:e.get(t)}function l(t,e,i,h,n){if("m"===h)throw new TypeError("Private method is not writable");if("a"===h&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof e?t!==e||!n:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===h?n.call(t,i):n?n.value=i:e.set(t,i),i}class w{constructor(t,h){var n,s,o,a;if("xy|bottom-left"===t)this.plane=new e(new i(0,0,1)),this.up=null!==(n=null==h?void 0:h.clone())&&void 0!==n?n:new i(0,1,0);else if("xy|top-left"===t)this.plane=new e(new i(0,0,-1)),this.up=null!==(s=null==h?void 0:h.clone())&&void 0!==s?s:new i(0,-1,0);else if("xz|top-left"===t)this.plane=new e(new i(0,1,0)),this.up=null!==(o=null==h?void 0:h.clone())&&void 0!==o?o:new i(0,0,-1);else if("xz|bottom-left"===t)this.plane=new e(new i(0,-1,0)),this.up=null!==(a=null==h?void 0:h.clone())&&void 0!==a?a:new i(0,0,1);else{if(this.plane=t.clone(),null==h)throw new Error("up is mandatory for a custom projection plane");this.up=h.clone()}}static get(t){return t instanceof w?t:new w(t)}clone(){return new w(this.plane.clone(),this.up.clone())}applyRotation(t){t.applyQuaternion((new h).setFromRotationMatrix((new n).lookAt(this.getPointByDistance(1),this.getPointByDistance(0),this.up)))}getPointByDistance(t,e){return this.getOrigin(e).add(this.plane.normal.clone().multiplyScalar(t))}getOrigin(t){const{normal:e,constant:i}=this.plane;return(t=t?t.copy(e):e.clone()).multiplyScalar(i)}getForward(t){return this.getPointByDistance(1,t).negate()}getRight(t){return this.getForward(t).cross(this.up)}getPoint(t,e,i){return(i=this.getOrigin(i)).add(this.getRight().setLength(t)),i.add(this.up.clone().setLength(e)),i}}var p,f,d,u,g,v,m,y,P,M,x,j,W,k,S,R;class Z{constructor(e,i){p.set(this,new t),f.set(this,new t),d.set(this,void 0),u.set(this,void 0),g.set(this,void 0),v.set(this,void 0),m.set(this,void 0),this.projectionPlane="string"==typeof e?w.get(e):e,this.viewSpecs=i}updateViewRect(e,i){var h,n,s;r(new t(e,i),this.viewSpecs,c(this,p,"f")),l(this,d,c(this,p,"f").width/2,"f"),l(this,u,c(this,p,"f").height/2,"f"),c(this,f,"f").set(e,i).divide(c(this,p,"f")),l(this,g,null!==(h=this.viewSpecs.near)&&void 0!==h?h:.1,"f"),l(this,v,null!==(n=this.viewSpecs.far)&&void 0!==n?n:1e5,"f"),l(this,m,null!==(s=this.viewSpecs.distanceToProjectionPlane)&&void 0!==s?s:100,"f")}getViewRect(){return[c(this,p,"f").width,c(this,p,"f").height,c(this,f,"f").x,c(this,f,"f").y]}createCamera(){const t=new s(-c(this,d,"f"),c(this,d,"f"),c(this,u,"f"),-c(this,u,"f"),c(this,g,"f"),c(this,v,"f"));return this.projectionPlane.applyRotation(t),t.position.copy(this.projectionPlane.getPointByDistance(c(this,m,"f"))),t.updateProjectionMatrix(),t}updateCamera(t){t.left=-c(this,d,"f"),t.right=c(this,d,"f"),t.top=c(this,u,"f"),t.bottom=-c(this,u,"f"),t.near=c(this,g,"f"),t.far=c(this,v,"f"),t.updateProjectionMatrix()}getZoom(t){return 1}}p=new WeakMap,f=new WeakMap,d=new WeakMap,u=new WeakMap,g=new WeakMap,v=new WeakMap,m=new WeakMap;class b{constructor(e,i){y.set(this,new t),P.set(this,new t),M.set(this,void 0),x.set(this,void 0),j.set(this,void 0),W.set(this,void 0),k.set(this,void 0),S.set(this,void 0),this.projectionPlane="string"==typeof e?w.get(e):e,this.viewSpecs=i}updateViewRect(e,i){var h,n,s;r(new t(e,i),this.viewSpecs,c(this,y,"f")),l(this,M,c(this,y,"f").height/2,"f"),c(this,P,"f").set(e,i).divide(c(this,y,"f")),l(this,x,null!==(h=this.viewSpecs.near)&&void 0!==h?h:.1,"f"),l(this,j,null!==(n=this.viewSpecs.far)&&void 0!==n?n:1e5,"f"),l(this,W,null!==(s=this.viewSpecs.distanceToProjectionPlane)&&void 0!==s?s:300,"f"),l(this,k,c(this,y,"f").width/c(this,y,"f").height,"f"),l(this,S,2*Math.atan(c(this,M,"f")/c(this,W,"f"))*180/Math.PI,"f")}getViewRect(){return[c(this,y,"f").width,c(this,y,"f").height,c(this,P,"f").x,c(this,P,"f").y]}createCamera(){const t=new o(c(this,S,"f"),c(this,k,"f"),c(this,x,"f"),c(this,j,"f"));return this.projectionPlane.applyRotation(t),t.position.copy(this.projectionPlane.getPointByDistance(c(this,W,"f"))),t.updateProjectionMatrix(),t}updateCamera(t){t.fov=c(this,S,"f"),t.aspect=c(this,k,"f"),t.updateProjectionMatrix()}getZoom(t){if(0===t)return 1;const e=c(this,W,"f")-t;return Math.tan(c(this,S,"f")/2*Math.PI/180)*e/c(this,M,"f")}}y=new WeakMap,P=new WeakMap,M=new WeakMap,x=new WeakMap,j=new WeakMap,W=new WeakMap,k=new WeakMap,S=new WeakMap;class C{constructor(t,e){this.containerWidth=0,this.containerHeight=0,this.width=0,this.height=0,R.set(this,0),this.projection=t,this.scene=null!=e?e:new a}resize(t,e){if(t!==this.containerWidth||e!==this.containerHeight){this.containerWidth=t,this.containerHeight=e,this.projection.updateViewRect(t,e);const[i,h]=this.projection.getViewRect();this.width=i,this.height=h,null!=this.camera?this.projection.updateCamera(this.camera):this.camera=this.projection.createCamera()}}renderFrame(t){var e;const{scene:i,camera:h}=this;i&&h?t.render(i,h):h||100!==l(this,R,(e=c(this,R,"f"),++e),"f")||(l(this,R,-1e3,"f"),console.warn("Stage2D has no camera and therefore cannot be rendered! normally this only happens if you forget to call the resize() method .."))}}R=new WeakMap;export{Z as OrthographicProjection,b as ParallaxProjection,w as ProjectionPlane,C as Stage2D,r as fitIntoRectangle};
//# sourceMappingURL=three-stages.js.map
